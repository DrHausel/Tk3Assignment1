/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.umundo.core;

import java.util.HashMap;

public class NodeStub extends EndPoint {
  private long swigCPtr;

  protected NodeStub(long cPtr, boolean cMemoryOwn) {
    super(umundoNativeJavaJNI.NodeStub_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NodeStub obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        umundoNativeJavaJNI.delete_NodeStub(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

	public HashMap<String, PublisherStub> getPublishers() {
		HashMap<String, PublisherStub> pubs = new HashMap<String, PublisherStub>();
		PublisherStubMap pubMap = getPublishersNative();
		StringArray pubKeys = getPubKeys();
		for (int i = 0; i < pubKeys.size(); i++) {
			pubs.put(pubKeys.get(i), pubMap.get(pubKeys.get(i)));
		}
		return pubs;
	}
	public HashMap<String, SubscriberStub> getSubscribers() {
		HashMap<String, SubscriberStub> subs = new HashMap<String, SubscriberStub>();
		SubscriberStubMap subMap = getSubscribersNative();
		StringArray subKeys = getSubKeys();
		for (int i = 0; i < subKeys.size(); i++) {
			subs.put(subKeys.get(i), subMap.get(subKeys.get(i)));
		}
		return subs;
	}


  public NodeStub() {
    this(umundoNativeJavaJNI.new_NodeStub(), true);
  }

  public boolean isValid() {
    return umundoNativeJavaJNI.NodeStub_isValid(swigCPtr, this);
  }

  public boolean equals(NodeStub other) {
    return umundoNativeJavaJNI.NodeStub_equals(swigCPtr, this, NodeStub.getCPtr(other), other);
  }

  public void addPublisher(PublisherStub pub) {
    umundoNativeJavaJNI.NodeStub_addPublisher(swigCPtr, this, PublisherStub.getCPtr(pub), pub);
  }

  public void removePublisher(PublisherStub pub) {
    umundoNativeJavaJNI.NodeStub_removePublisher(swigCPtr, this, PublisherStub.getCPtr(pub), pub);
  }

  public void addSubscriber(SubscriberStub sub) {
    umundoNativeJavaJNI.NodeStub_addSubscriber(swigCPtr, this, SubscriberStub.getCPtr(sub), sub);
  }

  public void removeSubscriber(SubscriberStub sub) {
    umundoNativeJavaJNI.NodeStub_removeSubscriber(swigCPtr, this, SubscriberStub.getCPtr(sub), sub);
  }

  public SubscriberStub getSubscriber(String uuid) {
    return new SubscriberStub(umundoNativeJavaJNI.NodeStub_getSubscriber(swigCPtr, this, uuid), false);
  }

  public PublisherStub getPublisher(String uuid) {
    return new PublisherStub(umundoNativeJavaJNI.NodeStub_getPublisher(swigCPtr, this, uuid), false);
  }

  private SubscriberStubMap getSubscribersNative() {
    return new SubscriberStubMap(umundoNativeJavaJNI.NodeStub_getSubscribersNative(swigCPtr, this), true);
  }

  private PublisherStubMap getPublishersNative() {
    return new PublisherStubMap(umundoNativeJavaJNI.NodeStub_getPublishersNative(swigCPtr, this), true);
  }

  public StringArray getPubKeys() {
    return new StringArray(umundoNativeJavaJNI.NodeStub_getPubKeys(swigCPtr, this), true);
  }

  public StringArray getSubKeys() {
    return new StringArray(umundoNativeJavaJNI.NodeStub_getSubKeys(swigCPtr, this), true);
  }

}
