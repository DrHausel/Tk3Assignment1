/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.umundo.core;

public class Discovery {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Discovery(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Discovery obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        umundoNativeJavaJNI.delete_Discovery(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Discovery(DiscoveryConfig config) {
    this(umundoNativeJavaJNI.new_Discovery__SWIG_0(DiscoveryConfig.getCPtr(config), config), true);
  }

  public Discovery(Discovery.DiscoveryType type, String domain) {
    this(umundoNativeJavaJNI.new_Discovery__SWIG_1(type.swigValue(), domain), true);
  }

  public Discovery(Discovery.DiscoveryType type) {
    this(umundoNativeJavaJNI.new_Discovery__SWIG_2(type.swigValue()), true);
  }

  public boolean isValid() {
    return umundoNativeJavaJNI.Discovery_isValid(swigCPtr, this);
  }

  public boolean equals(Discovery other) {
    return umundoNativeJavaJNI.Discovery_equals(swigCPtr, this, Discovery.getCPtr(other), other);
  }

  public void advertise(EndPoint endpoint) {
    umundoNativeJavaJNI.Discovery_advertise(swigCPtr, this, EndPoint.getCPtr(endpoint), endpoint);
  }

  public void add(Node node) {
    umundoNativeJavaJNI.Discovery_add(swigCPtr, this, Node.getCPtr(node), node);
  }

  public void unadvertise(EndPoint endpoint) {
    umundoNativeJavaJNI.Discovery_unadvertise(swigCPtr, this, EndPoint.getCPtr(endpoint), endpoint);
  }

  public void remove(Node node) {
    umundoNativeJavaJNI.Discovery_remove(swigCPtr, this, Node.getCPtr(node), node);
  }

  public void browse(SWIGTYPE_p_umundo__ResultSetT_umundo__EndPoint_const_t query) {
    umundoNativeJavaJNI.Discovery_browse(swigCPtr, this, SWIGTYPE_p_umundo__ResultSetT_umundo__EndPoint_const_t.getCPtr(query));
  }

  public void unbrowse(SWIGTYPE_p_umundo__ResultSetT_umundo__EndPoint_const_t query) {
    umundoNativeJavaJNI.Discovery_unbrowse(swigCPtr, this, SWIGTYPE_p_umundo__ResultSetT_umundo__EndPoint_const_t.getCPtr(query));
  }

  public EndPointArray list() {
    return new EndPointArray(umundoNativeJavaJNI.Discovery_list(swigCPtr, this), true);
  }

  public final static class Changes {
    public final static Discovery.Changes IFACE_ADDED = new Discovery.Changes("IFACE_ADDED", 0x01);
    public final static Discovery.Changes IFACE_REMOVED = new Discovery.Changes("IFACE_REMOVED", 0x02);

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Changes swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Changes.class + " with value " + swigValue);
    }

    private Changes(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Changes(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Changes(String swigName, Changes swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Changes[] swigValues = { IFACE_ADDED, IFACE_REMOVED };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class DiscoveryType {
    public final static Discovery.DiscoveryType MDNS = new Discovery.DiscoveryType("MDNS");
    public final static Discovery.DiscoveryType BROADCAST = new Discovery.DiscoveryType("BROADCAST");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DiscoveryType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DiscoveryType.class + " with value " + swigValue);
    }

    private DiscoveryType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DiscoveryType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DiscoveryType(String swigName, DiscoveryType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DiscoveryType[] swigValues = { MDNS, BROADCAST };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
