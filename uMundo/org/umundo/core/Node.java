/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.umundo.core;

import java.util.HashMap;

public class Node extends EndPoint {
  private long swigCPtr;

  protected Node(long cPtr, boolean cMemoryOwn) {
    super(umundoNativeJavaJNI.Node_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Node obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        umundoNativeJavaJNI.delete_Node(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

	public HashMap<String, Publisher> getPublishers() {
		HashMap<String, Publisher> pubs = new HashMap<String, Publisher>();
		PublisherMap pubMap = getPublishersNative();
		StringArray pubKeys = getPubKeys();
		for (int i = 0; i < pubKeys.size(); i++) {
			pubs.put(pubKeys.get(i), pubMap.get(pubKeys.get(i)));
		}
		return pubs;
	}
	public HashMap<String, Subscriber> getSubscribers() {
		HashMap<String, Subscriber> subs = new HashMap<String, Subscriber>();
		SubscriberMap subMap = getSubscribersNative();
		StringArray subKeys = getSubKeys();
		for (int i = 0; i < subKeys.size(); i++) {
			subs.put(subKeys.get(i), subMap.get(subKeys.get(i)));
		}
		return subs;
	}


  public Node() {
    this(umundoNativeJavaJNI.new_Node__SWIG_0(), true);
  }

  public Node(NodeConfig arg0) {
    this(umundoNativeJavaJNI.new_Node__SWIG_1(NodeConfig.getCPtr(arg0), arg0), true);
  }

  public Node(int nodePort, int pubPort) {
    this(umundoNativeJavaJNI.new_Node__SWIG_2(nodePort, pubPort), true);
  }

  public boolean isValid() {
    return umundoNativeJavaJNI.Node_isValid(swigCPtr, this);
  }

  public boolean equals(Node other) {
    return umundoNativeJavaJNI.Node_equals(swigCPtr, this, Node.getCPtr(other), other);
  }

  public void addSubscriber(Subscriber sub) {
    umundoNativeJavaJNI.Node_addSubscriber(swigCPtr, this, Subscriber.getCPtr(sub), sub);
  }

  public void removeSubscriber(Subscriber sub) {
    umundoNativeJavaJNI.Node_removeSubscriber(swigCPtr, this, Subscriber.getCPtr(sub), sub);
  }

  public void addPublisher(Publisher pub) {
    umundoNativeJavaJNI.Node_addPublisher(swigCPtr, this, Publisher.getCPtr(pub), pub);
  }

  public void removePublisher(Publisher pub) {
    umundoNativeJavaJNI.Node_removePublisher(swigCPtr, this, Publisher.getCPtr(pub), pub);
  }

  public NodeStubMap connectedTo() {
    return new NodeStubMap(umundoNativeJavaJNI.Node_connectedTo(swigCPtr, this), true);
  }

  public NodeStubMap connectedFrom() {
    return new NodeStubMap(umundoNativeJavaJNI.Node_connectedFrom(swigCPtr, this), true);
  }

  public Subscriber getSubscriber(String uuid) {
    return new Subscriber(umundoNativeJavaJNI.Node_getSubscriber(swigCPtr, this, uuid), true);
  }

  public Publisher getPublisher(String uuid) {
    return new Publisher(umundoNativeJavaJNI.Node_getPublisher(swigCPtr, this, uuid), true);
  }

  public void connect(Connectable connectable) {
    umundoNativeJavaJNI.Node_connect(swigCPtr, this, Connectable.getCPtr(connectable), connectable);
  }

  public void disconnect(Connectable connectable) {
    umundoNativeJavaJNI.Node_disconnect(swigCPtr, this, Connectable.getCPtr(connectable), connectable);
  }

  public void suspend() {
    umundoNativeJavaJNI.Node_suspend(swigCPtr, this);
  }

  public void resume() {
    umundoNativeJavaJNI.Node_resume(swigCPtr, this);
  }

  private SubscriberMap getSubscribersNative() {
    return new SubscriberMap(umundoNativeJavaJNI.Node_getSubscribersNative(swigCPtr, this), true);
  }

  private PublisherMap getPublishersNative() {
    return new PublisherMap(umundoNativeJavaJNI.Node_getPublishersNative(swigCPtr, this), true);
  }

  public void add(EndPoint endPoint) {
    umundoNativeJavaJNI.Node_add__SWIG_0(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint);
  }

  public void add(EndPoint endPoint, String via) {
    umundoNativeJavaJNI.Node_add__SWIG_1(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint, via);
  }

  public void remove(EndPoint endPoint) {
    umundoNativeJavaJNI.Node_remove__SWIG_0(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint);
  }

  public void remove(EndPoint endPoint, String via) {
    umundoNativeJavaJNI.Node_remove__SWIG_1(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint, via);
  }

  public void change(EndPoint endPoint, java.math.BigInteger what) {
    umundoNativeJavaJNI.Node_change__SWIG_0(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint, what);
  }

  public void change(EndPoint endPoint) {
    umundoNativeJavaJNI.Node_change__SWIG_1(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint);
  }

  public void change(EndPoint endPoint, String via, java.math.BigInteger what) {
    umundoNativeJavaJNI.Node_change__SWIG_2(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint, via, what);
  }

  public void change(EndPoint endPoint, String via) {
    umundoNativeJavaJNI.Node_change__SWIG_3(swigCPtr, this, EndPoint.getCPtr(endPoint), endPoint, via);
  }

  public StringArray getPubKeys() {
    return new StringArray(umundoNativeJavaJNI.Node_getPubKeys(swigCPtr, this), true);
  }

  public StringArray getSubKeys() {
    return new StringArray(umundoNativeJavaJNI.Node_getSubKeys(swigCPtr, this), true);
  }

}
