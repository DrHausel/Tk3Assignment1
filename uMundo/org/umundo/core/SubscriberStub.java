/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.umundo.core;

public class SubscriberStub extends EndPoint {
  private long swigCPtr;

  protected SubscriberStub(long cPtr, boolean cMemoryOwn) {
    super(umundoNativeJavaJNI.SubscriberStub_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SubscriberStub obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        umundoNativeJavaJNI.delete_SubscriberStub(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SubscriberStub() {
    this(umundoNativeJavaJNI.new_SubscriberStub(), true);
  }

  public boolean isValid() {
    return umundoNativeJavaJNI.SubscriberStub_isValid(swigCPtr, this);
  }

  public boolean equals(SubscriberStub other) {
    return umundoNativeJavaJNI.SubscriberStub_equals(swigCPtr, this, SubscriberStub.getCPtr(other), other);
  }

  public String getChannelName() {
    return umundoNativeJavaJNI.SubscriberStub_getChannelName(swigCPtr, this);
  }

  public boolean isRTP() {
    return umundoNativeJavaJNI.SubscriberStub_isRTP(swigCPtr, this);
  }

  public boolean isMulticast() {
    return umundoNativeJavaJNI.SubscriberStub_isMulticast(swigCPtr, this);
  }

  public final static class SubscriberType {
    public final static SubscriberStub.SubscriberType ZEROMQ = new SubscriberStub.SubscriberType("ZEROMQ", 0x0001);
    public final static SubscriberStub.SubscriberType RTP = new SubscriberStub.SubscriberType("RTP", 0x0002);

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SubscriberType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SubscriberType.class + " with value " + swigValue);
    }

    private SubscriberType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SubscriberType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SubscriberType(String swigName, SubscriberType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SubscriberType[] swigValues = { ZEROMQ, RTP };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
